<?php
/**
 * @file
 * Implementation of hooks and basic functionality goes here.
 */

/**
 * Implements hook_menu().
 */
function ding_spt_statistics_menu() {
  $items = array();

  $items['spt/redirect'] = array(
    'title' => 'Ding SPT redirect',
    'description' => 'Count click and redirect to the external resource',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'page callback' => 'ding_spt_statistics_redirect',
  );
  $items['spt/statistics'] = array(
    'title' => 'Ding SPT statistics',
    'description' => 'Count click and redirect to the external resource',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view spt statistics'),
    'page callback' => 'ding_spt_statistics_display',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function ding_spt_statistics_permission() {
  return array(
    'view spt statistics' => array(
      'title' => t('View SPT statistics'),
      'description' => t('View statistics for clicked external SPT resources.'),
    ),
  );
}

/**
 * Count click and redirect to the resource.
 */
function ding_spt_statistics_redirect() {
  // Register statistical data.
  $hostname = !empty($_GET['hostname']) ? $_GET['hostname'] : FALSE;
  ding_spt_statistics_register($hostname);

  // Redirect to the external resource.
  $path = !empty($_GET['path']) ? $_GET['path'] : FALSE;
  drupal_goto($path);
}

/**
 * Register hostname into the statistics table.
 *
 * @param $hostname string
 *   Name of the external host.
 */
function ding_spt_statistics_register($hostname) {
  if (!$hostname) {
    return;
  }
  $result = db_select('ding_spt_statistics', 'dss')
    ->fields('dss', array('hid', 'count'))
    ->condition('hostname', $hostname)
    ->execute()
    ->fetchAssoc()
  ;

  // Update table statistics with new values.
  if (!$result) {
    $result['hid'] = db_insert('ding_spt_statistics')
      ->fields(array(
        'hostname' => $hostname,
        'count' => 1,
      ))
      ->execute();
  }
  else {
    db_update('ding_spt_statistics')
      ->expression('count', 'count + 1')
      ->condition('hostname', $hostname)
      ->execute();
  }

  // Insert new record to the data table.
  db_insert('ding_spt_hits')
    ->fields(array(
      'hid' => $result['hid'],
      'accessed' => REQUEST_TIME,
    ))
    ->execute();
}

/**
 * Display statistics of the hits as a table.
 *
 * @return string
 *   Themed table.
 */
function ding_spt_statistics_display() {
  // Get data from db.
  $query = db_select('ding_spt_statistics', 's');
  $query->leftJoin('ding_spt_hits', 'h', 's.hid = h.hid');
  $query->fields('s', array('hostname', 'count'));

  $query->addExpression('SUM(CASE WHEN unix_timestamp(now()) - h.accessed < 86400 THEN 1 ELSE 0 END)', 'day');
  $query->addExpression('SUM(CASE WHEN unix_timestamp(now()) - h.accessed < 7*86400 THEN 1 ELSE 0 END)', 'week');
  $query->addExpression('SUM(CASE WHEN unix_timestamp(now()) - h.accessed < 30*86400 THEN 1 ELSE 0 END)', 'month');
  $query->addExpression('SUM(CASE WHEN unix_timestamp(now()) - h.accessed < 90*86400 THEN 1 ELSE 0 END)', '3months');

  $query->groupBy('s.hid');
  $result = $query->execute()->fetchAllAssoc('hostname');

  // Build markup for the table.
  $rows = array();
  foreach ($result as &$item) {
    $rows[] = array(
      l($item->hostname, 'http://' . $item->hostname, array('attributes' => array('target'=>'_blank'))),
      $item->day,
      $item->week,
      $item->month,
      $item->{'3months'},
      $item->count,
    );
  }

  $header = array(t('Hostname'), t('Day'), t('Week'), t('Month'), t('3 Months'), t('All'));

  return theme('table', array('header' => $header, 'rows' => $rows));
}

/**
 * Implements hook_cron().
 */
function ding_spt_statistics_cron() {
  // Delete all records older then 3 months.
  // Consider month as a period of 30 days.
  db_delete('ding_spt_hits')
    ->condition('accessed', REQUEST_TIME - 86400 * 90, '<')
    ->execute();
}

/**
 * Implements hook_spt_external_url_alter().
 */
function ding_spt_statistics_spt_external_url_alter(&$callbacks) {
  // Add url preprocess callback.
  $callbacks[] = 'dingSPTStatisticsUrlPreprocess';

  drupal_add_js(drupal_get_path('module', 'ding_spt_statistics'). '/js/ding_spt_statistics.js');
}
